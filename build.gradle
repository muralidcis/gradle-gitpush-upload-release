apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

buildscript {
    repositories {
	jcenter()
        mavenCentral()

    }
    
    dependencies {
	classpath 'org.ajoberstar:gradle-git:1.4.0'
	classpath 'co.riiid:gradle-github-plugin:0.4.2'
    }

}

apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'co.riiid.gradle'

// Add the release notes
def inputFile = new File("README.md")

// Get tag version Name
def getVersion = { ->
    try {
        def stdout = new ByteArrayOutputStream()	
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
	
        def versionComponents = stdout.toString().trim().split("-")
	return versionComponents[0]
	
    } catch (ignored) {
        return 'undefined tag';
    }
}

// Create the tag and push 
task projectrelease << {
    def tagName = getVersion()
    println 'creating tag for '+tagName
    grgit.tag.add(name: tagName, message: "Addition of new tags for toolkit release ${tagName}",force:true,  annotate: true)
    grgit.push(refsOrSpecs: [tagName])
}

// To remove the tag and push 
task removeTag <<{
    def tagName = getVersion()
    println 'removing tag '+tagName
    grgit.tag.remove(names: [tagName])
    grgit.push(tags: true)	
}

// git relase upload configuration and push the files to tag release.
github {
    owner = userName
    repo = repoName    
    token =  tokenKey //'92f7603cec027a1c28b39f79f419e0e294f42561'
    tagName = getVersion()
    targetCommitish = 'master'
    name = 'fd-toolkit-'+getVersion()
    body = inputFile.text
    assets = ['fd-development-kit-'+getVersion()+'.zip']
}


